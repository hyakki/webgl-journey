(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{168:function(r,e,t){"use strict";t.r(e);t(230),t(179);var o=t(160),n=t(161),l=t(294),m=function(){function r(canvas,e){Object(o.a)(this,r),this.canvas=canvas,this.initMeter(e),this.init()}return Object(n.a)(r,[{key:"initMeter",value:function(r){t(164),this.meter=new FPSMeter(r,{interval:100,smoothing:10,show:"fps",toggleOn:!1,decimals:1,maxFps:60,threshold:100,position:"absolute",zIndex:10,left:"auto",top:"0px",right:"0px",bottom:"auto",margin:"0 0 0 0",theme:"colorful",heat:1,graph:1,history:20})}},{key:"init",value:function(){var r=this,e=this.canvas.getContext("webgl");e.clearColor(.75,.85,.8,1),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.enable(e.DEPTH_TEST),e.enable(e.CULL_FACE),e.frontFace(e.CCW),e.cullFace(e.BACK);var t=e.createShader(e.VERTEX_SHADER),o=e.createShader(e.FRAGMENT_SHADER);if(e.shaderSource(t,"\n      precision mediump float;\n      attribute vec3 vertPosition;\n      attribute vec3 vertColor;\n      varying vec3 fragColor;\n      uniform mat4 mWorld;\n      uniform mat4 mView;\n      uniform mat4 mProj;\n      void main() {\n        fragColor = vertColor;\n        gl_Position = mProj * mView * mWorld * vec4(vertPosition, 1.0);\n      }\n    "),e.shaderSource(o,"\n      precision mediump float;\n      varying vec3 fragColor;\n      void main() {\n        gl_FragColor = vec4(fragColor, 1.0);\n      }\n    "),e.compileShader(t),e.getShaderParameter(t,e.COMPILE_STATUS))if(e.compileShader(o),e.getShaderParameter(o,e.COMPILE_STATUS)){var n=e.createProgram();e.attachShader(n,t),e.attachShader(n,o),e.linkProgram(n),e.getProgramParameter(n,e.LINK_STATUS)||console.error("LINK PROGRAM : ERROR",e.getProgramInfoLog(n)),e.validateProgram(n),e.getProgramParameter(n,e.VALIDATE_STATUS)||console.error("VALIDATE PROGRAM : ERROR",e.getProgramInfoLog(n));var m=[0,1,2,0,2,3,5,4,6,6,4,7,8,9,10,8,10,11,13,12,14,15,14,12,16,17,18,16,18,19,21,20,22,22,20,23],E=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,E),e.bufferData(e.ARRAY_BUFFER,new Float32Array([-1,1,-1,.5,.5,.5,-1,1,1,.5,.5,.5,1,1,1,.5,.5,.5,1,1,-1,.5,.5,.5,-1,1,1,.75,.25,.5,-1,-1,1,.75,.25,.5,-1,-1,-1,.75,.25,.5,-1,1,-1,.75,.25,.5,1,1,1,.25,.25,.75,1,-1,1,.25,.25,.75,1,-1,-1,.25,.25,.75,1,1,-1,.25,.25,.75,1,1,1,1,0,.15,1,-1,1,1,0,.15,-1,-1,1,1,0,.15,-1,1,1,1,0,.15,1,1,-1,0,1,.15,1,-1,-1,0,1,.15,-1,-1,-1,0,1,.15,-1,1,-1,0,1,.15,-1,-1,-1,.5,.5,1,-1,-1,1,.5,.5,1,1,-1,1,.5,.5,1,1,-1,-1,.5,.5,1]),e.STATIC_DRAW);var A=e.createBuffer();e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,A),e.bufferData(e.ELEMENT_ARRAY_BUFFER,new Uint16Array(m),e.STATIC_DRAW);var c=e.getAttribLocation(n,"vertPosition");e.vertexAttribPointer(c,3,e.FLOAT,e.FALSE,6*Float32Array.BYTES_PER_ELEMENT,0),e.enableVertexAttribArray(c);var f=e.getAttribLocation(n,"vertColor");e.vertexAttribPointer(f,3,e.FLOAT,e.FALSE,6*Float32Array.BYTES_PER_ELEMENT,3*Float32Array.BYTES_PER_ELEMENT),e.enableVertexAttribArray(f),e.useProgram(n);var R=e.getUniformLocation(n,"mWorld"),F=e.getUniformLocation(n,"mView"),v=e.getUniformLocation(n,"mProj"),S=new Float32Array(16),T=new Float32Array(16),h=new Float32Array(16);l.mat4.identity(S),l.mat4.lookAt(T,[0,0,-8],[0,0,0],[0,1,0]),l.mat4.perspective(h,l.glMatrix.toRadian(45),canvas.width/canvas.height,.1,1e3),e.uniformMatrix4fv(R,e.FALSE,S),e.uniformMatrix4fv(F,e.FALSE,T),e.uniformMatrix4fv(v,e.FALSE,h);var d=new Float32Array(16),L=new Float32Array(16),P=new Float32Array(16);l.mat4.identity(P);var _=0;requestAnimationFrame((function t(){r.meter.tick(),_=performance.now()/1e3/6*2*Math.PI,l.mat4.rotate(L,P,_,[0,1,0]),l.mat4.rotate(d,P,_/4,[1,0,0]),l.mat4.mul(S,L,d),e.uniformMatrix4fv(R,e.FALSE,S),e.clearColor(.75,.85,.8,1),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.drawElements(e.TRIANGLES,m.length,e.UNSIGNED_SHORT,0),requestAnimationFrame(t)}))}else console.error("FRAGMENT SHADER : COMPILE ERROR",e.getShaderInfoLog(o));else console.error("VERTEX SHADER : COMPILE ERROR",e.getShaderInfoLog(t))}},{key:"destroy",value:function(){this.meter.destroy()}}]),r}();e.default=m}}]);